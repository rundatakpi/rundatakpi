<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cn.run.kpi.datamonitor.task.dao.TaskMonitorDao">
    <resultMap type="com.cn.run.kpi.datamonitor.task.entity.RunningTask" id="runningMap">
    	<id column="id" property="id"></id>
		<result column="createdate" property="time"></result>
		<result column="running" property="taskNum"></result>
    </resultMap>
    
    <resultMap type="com.cn.run.kpi.datamonitor.task.entity.CompletedTask" id="completedMap">
    	<id column="id" property="id"></id>
		<result column="createdate" property="time"></result>
		<result column="complete" property="taskNum"></result>
    </resultMap>
    
    <resultMap type="com.cn.run.kpi.datamonitor.task.entity.Task" id="runningtaskMap">
    	<id column="id" property="id"></id>
		<result column="server" property="server"></result>
		<result column="starttime" property="startTime"></result>
		<result column="runningtime" property="runningTime"></result>
    </resultMap>
    
    <resultMap type="com.cn.run.kpi.datamonitor.task.entity.FailedTask" id="failedMap">
    	<id column="id" property="id"></id>
		<result column="server" property="server"></result>
		<result column="starttime" property="startTime"></result>
		<result column="failtime" property="failTime"></result>
		<result column="reason" property="reason"></result>
    </resultMap>
    
    <sql id="queryCondition">
        <if test="null != createDate and '' != createDate">
            and createdate = #{createDate}
        </if>
        <if test="null != reason and '' != reason">
            and reason = #{reason}
        </if>
        
    </sql>
    
	<select id="getRunningTaskData" parameterType="map" resultMap="runningMap">
		select count(*) as running, INPUT_TIME createdate from jobmonitor runningtime where JOB_STATUS = 3
		and date_sub(CURDATE(), INTERVAL #{day} DAY) <![CDATA[<=]]>  date(INPUT_TIME)
		group by createdate ORDER BY createdate
	</select>
	
	<select id="getCompletedTaskData" parameterType="map" resultMap="completedMap">
		select count(*) as complete, INPUT_TIME createdate from jobmonitor where JOB_STATUS = 4
		and date_sub(CURDATE(), INTERVAL #{day} DAY) <![CDATA[<=]]>  date(INPUT_TIME)
		group by createdate ORDER BY createdate;
	</select>
	
	<select id="getRunningTask" parameterType="map" resultMap="runningtaskMap">
		select ID id, HOSTIP server, START_TIME starttime, END_TIME runningtime from jobmonitor
		where JOB_STATUS = 3
		<include refid="queryCondition"></include>
		limit #{start}, #{end}
	</select>
	
	<select id="getFailedTask" parameterType="map" resultMap="failedMap">
		select ID id, HOSTIP server, START_TIME starttime, END_TIME failtime, 'xxx' reason from jobmonitor
		where JOB_STATUS = 2
		<include refid="queryCondition"></include>
		limit #{start}, #{end}
	</select>
	
	<select id="getTotalTaskNum" parameterType="map" resultType="long">
	    select count(*) from jobmonitor where JOB_STATUS = #{status}
	    <include refid="queryCondition"></include>
	</select>
</mapper>